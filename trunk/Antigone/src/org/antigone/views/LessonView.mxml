<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:views="org.antigone.views.*">
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;			
			[Bindable]
			public var courses:Array;
			
			[Bindable]
			public var exercises:Array;
			
			private var coursesRepeaterDidEnd:Boolean;
			private var exercisesRepeaterDidEnd:Boolean;
			
			/* Check for the time when both Repeaters will have created all
			 * their child elements, then activate the sorting. */
			private function RepeatEnded(event:FlexEvent):void
			{
				switch (event.target) {
					case coursesRepeater:
						this.coursesRepeaterDidEnd = true;
						break;
					case exercisesRepeater:
						this.exercisesRepeaterDidEnd = true;
						break;
					default:
						throw new Error("Unknow event target.");
				}
				
				if (this.coursesRepeaterDidEnd && this.exercisesRepeaterDidEnd)
					SortItems();
			}
			
			/* Sort Courses and Exercises panels in the ViewStack
			 *
 			 * Courses and Exercices are all read in sequential order, and thus have an
			 * "index" property to reflect the element position in the lesson.
			 * For typing reasons, we have to create Courses and Exercises in two different
			 * repeaters - so after they are created, we sort them in the correct order. */
			protected function SortItems():void
			{
				for each(var child:DisplayObject in viewStack.getChildren()){
					if (getQualifiedClassName(child) == "org.antigone.views::CourseView")
						viewStack.setChildIndex(child, (child as CourseView).course.lessonIndex);
					else
					if (getQualifiedClassName(child) == "org.antigone.views::ExerciseView")
						viewStack.setChildIndex(child, (child as ExerciseView).exercise.lessonIndex);
				}
			}
		]]>
	</mx:Script>
	
	<mx:ViewStack id="viewStack" width="100%" height="100%" >
		
		<mx:Repeater id="coursesRepeater" dataProvider="{courses}" repeatEnd="RepeatEnded(event)">
			<views:CourseView course="{coursesRepeater.currentItem}" />
		</mx:Repeater>
		
		<mx:Repeater id="exercisesRepeater" dataProvider="{exercises}" repeatEnd="RepeatEnded(event)">
			<views:ExerciseView exercise="{exercisesRepeater.currentItem}" />
		</mx:Repeater>
		
	</mx:ViewStack>
	
	<mx:Button label="Next step"
		click="viewStack.selectedIndex = (viewStack.selectedIndex + 1) % viewStack.numChildren" />
	
	<views:LessonToolbox width="100%" />
	
</mx:VBox>
